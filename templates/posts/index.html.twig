{% extends 'base.html.twig' %}

{% block title %}Posts index{% endblock %}

{% block body %}
    <h1>Posts index</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Author</th>
                <th>Original Poster</th>
                <th>Repost?</th>
                <th>Content</th>
                <th>Created_at</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for post in posts %}
            <tr>
                <td>{{ post.author ? post.author.username : '' }}</td>
                <td>{{ post.originalPost ? post.originalPost.author.username : post.author.username }}</td>
                <td>{{ post.originalPost ? 'Yes' : 'No' }}</td>
                <td>{{ post.content }}</td>
                <td>{{ post.createdAt ? post.createdAt|date('Y-m-d H:i:s') : '' }}</td>
                <td>
                    <a href="{{ path('app_posts_show', {'id': post.id}) }}">show</a>
                    {% if app.user and post.author == app.user %}
                        <a href="{{ path('app_posts_edit', {'id': post.id}) }}">edit</a>
                    {% endif %}
                    <a href="{{ path('app_posts_repost', {'id': post.id}) }}">repost</a>

                    <div class="likes">
                    <button class="like-button" data-post-id="{{ post.id }}">
                        {{ post.likes|filter(l => l.user == app.user)|length > 0 ? 'Unlike' : 'Like' }}
                    </button>
                    <span class="like-count">{{ post.likes|length }}</span> likes
                    </div>

                </td>
            </tr>
            
            {% for repost in post.reposts %}
                <tr>
                    <td>{{ repost.author ? repost.author.username : '' }}</td>
                    <td>{{ post.author ? post.author.username : '' }}</td>
                    <td>Yes</td>
                    <td>{{ repost.content }}</td>
                    <td>{{ repost.createdAt ? repost.createdAt|date('Y-m-d H:i:s') : '' }}</td>
                    <td>
                        <a href="{{ path('app_posts_show', {'id': repost.id}) }}">show</a>
                        {% if repost.author == app.user %}
                            <a href="{{ path('app_posts_edit', {'id': repost.id}) }}">edit</a>
                        {% endif %}
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr>
                <td colspan="5">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <a href="{{ path('app_posts_new') }}">Create new</a>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const likeButtons = document.querySelectorAll('.like-button');

            likeButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault(); 
                    const postId = this.dataset.postId;
                    const button = this;
                    
                    fetch('{{ path('posts_like', {'id': '__post_id__'}) }}'.replace('__post_id__', postId), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({}) 
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            button.textContent = data.liked ? 'Unlike' : 'Like';
                            const likeCount = button.nextElementSibling;
                            likeCount.textContent = data.likeCount;
                        } else {
                            alert('Erreur lors de la mise Ã  jour du like');
                        }
                    })
                    .catch(error => {
                        alert('Une erreur est survenue');
                    });
                });
            });
        });
    </script>
{% endblock %}
